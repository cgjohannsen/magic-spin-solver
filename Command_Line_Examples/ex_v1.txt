[chrisj17@linuxremote1 Magic_Squares]$ cat MS_Model_v1.pml > pan_in
[chrisj17@linuxremote1 Magic_Squares]$ spin -F ms_claim_v1.ltl >> pan_in
[chrisj17@linuxremote1 Magic_Squares]$ spin -a pan_in
[chrisj17@linuxremote1 Magic_Squares]$ gcc -o pan pan.c
[chrisj17@linuxremote1 Magic_Squares]$ ./pan -a
warning: for p.o. reduction to be valid the never claim must be stutter-invariant
(never claims generated from LTL formulae are stutter-invariant)
pan:1: assertion violated  !(((((row_1_sum==target_sum)&&(row_2_sum==target_sum))&&(col_1_sum==target_sum))&&(col_2_sum==target_sum))) (at depth 48)
pan: wrote pan_in.trail

(Spin Version 6.4.6 -- 2 December 2016)
Warning: Search not completed
        + Partial Order Reduction

Full statespace search for:
        never claim             + (never_0)
        assertion violations    + (if within scope of claim)
        acceptance   cycles     + (fairness disabled)
        invalid end states      - (disabled by never claim)

State-vector 84 byte, depth reached 97, errors: 1
    11330 states, stored
    24128 states, matched
    35458 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         1 (resolved)

Stats on memory usage (in Megabytes):
    1.210       equivalent memory usage for states (stored*(State-vector + overhead))
    1.066       actual memory usage for states (compression: 88.12%)
                state-vector as stored = 71 byte + 28 byte overhead
  128.000       memory used for hash table (-w24)
    0.534       memory used for DFS stack (-m10000)
  129.511       total actual memory usage



pan: elapsed time 0.08 seconds
pan: rate    141625 states/second
[chrisj17@linuxremote1 Magic_Squares]$ spin -t pan_in
Never claim moves to line 118   [(1)]
spin: pan_in:117, Error: assertion violated
spin: text of failed assertion: assert(!(((((row_1_sum==target_sum)&&(row_2_sum==target_sum))&&(col_1_sum==target_sum))&&(col_2_sum==target_sum))))
Never claim moves to line 117   [assert(!(((((row_1_sum==target_sum)&&(row_2_sum==target_sum))&&(col_1_sum==target_sum))&&(col_2_sum==target_sum))))]
spin: trail ends after 49 steps
#processes: 4
                target_sum = 10
                board[0] = 5
                board[1] = 5
                board[2] = 5
                board[3] = 5
                row_1_sum = 10
                row_2_sum = 10
                col_1_sum = 10
                col_2_sum = 10
 49:    proc  3 (fill_board:1) pan_in:68 (state 42)
 49:    proc  2 (fill_board:1) pan_in:68 (state 42)
 49:    proc  1 (fill_board:1) pan_in:68 (state 42)
 49:    proc  0 (fill_board:1) pan_in:68 (state 42)
 49:    proc  - (never_0:1) pan_in:116 (state 6)
4 processes created
