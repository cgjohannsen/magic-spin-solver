[chrisj17@linuxremote1 Magic_Squares]$ spin -a pan_in
[chrisj17@linuxremote1 Magic_Squares]$ gcc -o pan pan.c
[chrisj17@linuxremote1 Magic_Squares]$ ./pan
warning: never claim + accept labels requires -a flag to fully verify
warning: for p.o. reduction to be valid the never claim must be stutter-invariant
(never claims generated from LTL formulae are stutter-invariant)
Depth=     129 States=    1e+06 Transitions= 2.46e+06 Memory=   212.616 t=     3.16 R=   3e+05
Depth=     129 States=    2e+06 Transitions= 5.03e+06 Memory=   296.601 t=     6.11 R=   3e+05
Depth=     129 States=    3e+06 Transitions= 7.55e+06 Memory=   380.585 t=     8.83 R=   3e+05
Depth=     129 States=    4e+06 Transitions= 1.01e+07 Memory=   464.569 t=     11.3 R=   4e+05
Depth=     129 States=    5e+06 Transitions= 1.24e+07 Memory=   551.581 t=       14 R=   4e+05
Depth=     129 States=    6e+06 Transitions= 1.45e+07 Memory=   643.183 t=     16.1 R=   4e+05
Depth=     129 States=    7e+06 Transitions= 1.66e+07 Memory=   734.784 t=     18.3 R=   4e+05
Depth=     129 States=    8e+06 Transitions= 1.91e+07 Memory=   826.483 t=     21.2 R=   4e+05
Depth=     129 States=    9e+06 Transitions= 2.17e+07 Memory=   918.085 t=     24.5 R=   4e+05
Depth=     129 States=    1e+07 Transitions= 2.42e+07 Memory=  1009.687 t=     27.3 R=   4e+05
Depth=     129 States=  1.1e+07 Transitions= 2.67e+07 Memory=  1101.288 t=     30.1 R=   4e+05
pan:1: assertion violated  !(((((((((target_sum==((board[0]+board[1])+board[2]))&&(target_sum==((board[3]+board[4])+board[5])))&&(target_sum==((board[6]+board[7])+board[8])))&&(target_sum==((board[0]+board[3])+board[6])))&&(target_sum==((board[1]+board[4])+board[7])))&&(target_sum==((board[2]+board[5])+board[8])))&&(target_sum==((board[0]+board[4])+board[8])))&&(target_sum==((board[2]+board[4])+board[6])))) (at depth 126)
pan: wrote pan_in.trail

(Spin Version 6.4.6 -- 2 December 2016)
Warning: Search not completed
        + Partial Order Reduction

Full statespace search for:
        never claim             + (never_0)
        assertion violations    + (if within scope of claim)
        acceptance   cycles     - (not selected)
        invalid end states      - (disabled by never claim)

State-vector 132 byte, depth reached 129, errors: 1
 11500842 states, stored
 16528063 states, matched
 28028905 transitions (= stored+matched)
        0 atomic steps
hash conflicts:   2037780 (resolved)

Stats on memory usage (in Megabytes):
 1754.889       equivalent memory usage for states (stored*(State-vector + overhead))
 1019.349       actual memory usage for states (compression: 58.09%)
                state-vector as stored = 65 byte + 28 byte overhead
  128.000       memory used for hash table (-w24)
    0.534       memory used for DFS stack (-m10000)
 1147.187       total actual memory usage



pan: elapsed time 31.6 seconds
pan: rate 364296.55 states/second
[chrisj17@linuxremote1 Magic_Squares]$ spin -t pan_in
Never claim moves to line 91    [(1)]
spin: pan_in:90, Error: assertion violated
spin: text of failed assertion: assert(!(((((((((target_sum==((board[0]+board[1])+board[2]))&&(target_sum==((board[3]+board[4])+board[5])))&&(target_sum==((board[6]+board[7])+board[8])))&&(target_sum==((board[0]+board[3])+board[6])))&&(target_sum==((board[1]+board[4])+board[7])))&&(target_sum==((board[2]+board[5])+board[8])))&&(target_sum==((board[0]+board[4])+board[8])))&&(target_sum==((board[2]+board[4])+board[6])))))
Never claim moves to line 90    [assert(!(((((((((target_sum==((board[0]+board[1])+board[2]))&&(target_sum==((board[3]+board[4])+board[5])))&&(target_sum==((board[6]+board[7])+board[8])))&&(target_sum==((board[0]+board[3])+board[6])))&&(target_sum==((board[1]+board[4])+board[7])))&&(target_sum==((board[2]+board[5])+board[8])))&&(target_sum==((board[0]+board[4])+board[8])))&&(target_sum==((board[2]+board[4])+board[6])))))]
spin: trail ends after 127 steps
#processes: 10
                target_sum = 15
                board[0] = 6
                board[1] = 1
                board[2] = 8
                board[3] = 7
                board[4] = 5
                board[5] = 3
                board[6] = 2
                board[7] = 9
                board[8] = 4
127:    proc  9 (fill_board:1) pan_in:61 (state 18)
127:    proc  8 (fill_board:1) pan_in:86 (state 31) <valid end state>
127:    proc  7 (fill_board:1) pan_in:51 (state 12)
127:    proc  6 (fill_board:1) pan_in:56 (state 15)
127:    proc  5 (fill_board:1) pan_in:66 (state 21)
127:    proc  4 (fill_board:1) pan_in:76 (state 27)
127:    proc  3 (fill_board:1) pan_in:81 (state 30)
127:    proc  2 (fill_board:1) pan_in:46 (state 9)
127:    proc  1 (fill_board:1) pan_in:71 (state 24)
127:    proc  0 (:init::1) pan_in:31 (state 10) <valid end state>
127:    proc  - (never_0:1) pan_in:89 (state 6)
10 processes created
