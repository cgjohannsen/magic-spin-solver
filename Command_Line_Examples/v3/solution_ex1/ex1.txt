[chrisj17@linuxremote1 Magic_Squares]$ ./pan
warning: never claim + accept labels requires -a flag to fully verify
warning: for p.o. reduction to be valid the never claim must be stutter-invariant
(never claims generated from LTL formulae are stutter-invariant)
pan:1: assertion violated  !((((((((((((target_sum==((board[0]+board[1])+board[2]))&&(target_sum==((board[3]+board[4])+board[5])))&&(target_sum==((board[6]+board[7])+board[8])))&&(target_sum==((board[0]+board[3])+board[6])))&&(target_sum==((board[1]+board[4])+board[7])))&&(target_sum==((board[2]+board[5])+board[8])))&&(target_sum==((board[0]+board[4])+board[8])))&&(target_sum==((board[2]+board[4])+board[6])))&&(board[3]==3))&&(board[7]==9))&&(board[8]==2))) (at depth 137)
pan: wrote pan_in.trail

(Spin Version 6.4.6 -- 2 December 2016)
Warning: Search not completed
        + Partial Order Reduction

Full statespace search for:
        never claim             + (never_0)
        assertion violations    + (if within scope of claim)
        acceptance   cycles     - (not selected)
        invalid end states      - (disabled by never claim)

State-vector 124 byte, depth reached 142, errors: 1
   855941 states, stored
   285303 states, matched
  1141244 transitions (= stored+matched)
  4060561 atomic steps
hash conflicts:      4990 (resolved)

Stats on memory usage (in Megabytes):
  124.076       equivalent memory usage for states (stored*(State-vector + overhead))
  100.576       actual memory usage for states (compression: 81.06%)
                state-vector as stored = 95 byte + 28 byte overhead
  128.000       memory used for hash table (-w24)
    0.534       memory used for DFS stack (-m10000)
  228.925       total actual memory usage



pan: elapsed time 2.02 seconds
pan: rate 423733.17 states/second
[chrisj17@linuxremote1 Magic_Squares]$ spin -t pan_in
Never claim moves to line 58    [(1)]
spin: pan_in:57, Error: assertion violated
spin: text of failed assertion: assert(!((((((((((((target_sum==((board[0]+board[1])+board[2]))&&(target_sum==((board[3]+board[4])+board[5])))&&(target_sum==((board[6]+board[7])+board[8])))&&(target_sum==((board[0]+board[3])+board[6])))&&(target_sum==((board[1]+board[4])+board[7])))&&(target_sum==((board[2]+board[5])+board[8])))&&(target_sum==((board[0]+board[4])+board[8])))&&(target_sum==((board[2]+board[4])+board[6])))&&(board[3]==3))&&(board[7]==9))&&(board[8]==2))))
Never claim moves to line 57    [assert(!((((((((((((target_sum==((board[0]+board[1])+board[2]))&&(target_sum==((board[3]+board[4])+board[5])))&&(target_sum==((board[6]+board[7])+board[8])))&&(target_sum==((board[0]+board[3])+board[6])))&&(target_sum==((board[1]+board[4])+board[7])))&&(target_sum==((board[2]+board[5])+board[8])))&&(target_sum==((board[0]+board[4])+board[8])))&&(target_sum==((board[2]+board[4])+board[6])))&&(board[3]==3))&&(board[7]==9))&&(board[8]==2))))]
spin: trail ends after 138 steps
#processes: 2
                target_sum = 15
                board[0] = 8
                board[1] = 1
                board[2] = 6
                board[3] = 3
                board[4] = 5
                board[5] = 7
                board[6] = 4
                board[7] = 9
                board[8] = 2
                nums_available[0] = 2
                nums_available[1] = 9
                nums_available[2] = 9
                nums_available[3] = 9
                nums_available[4] = 9
                nums_available[5] = 9
                nums_available[6] = 9
                nums_available[7] = 9
                nums_available[8] = 9
                size = 0
138:    proc  1 (fill:1) pan_in:44 (state 29) <valid end state>
138:    proc  0 (:init::1) pan_in:54 (state 11) <valid end state>
138:    proc  - (never_0:1) pan_in:56 (state 6)
2 processes created
